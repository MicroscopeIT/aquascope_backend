version: "3"
services:

  server:
    build:
      context: .
      dockerfile: docker/webserver/Dockerfile
    ports:
      - 80:80
    depends_on:
      - rabbitmq
      - mongo
    volumes:
      - ./webserver.log:/app/webserver.log
      - .:/app
    network_mode: host
    env_file:
      - celery.env
      - celery_consts.env
      - mongodb_credentials.env
      - user_authentication.env
      - storage_credentials.env

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_NODENAME=rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - celery.env
      - celery_consts.env

  celery-worker:
    build:
      context: .
      dockerfile: docker/celery_worker/Dockerfile
    depends_on:
      - rabbitmq
    env_file:
      - celery.env
      - celery_consts.env

  mongo:
    image: mongo:3.4
    env_file:
      - mongodb.env
    ports:
      - 27017:27017
    volumes:
      - ./docker/local_db/:/docker-entrypoint-initdb.d/:ro

  storage-emulator:
    image: arafato/azurite
    environment:
      - executable=blob
    ports:
      - 10000:10000

  data-population-one-shot:
    build:
      context: .
      dockerfile: docker/webserver/Dockerfile
    depends_on:
      - mongo
    volumes:
      - .:/app
    env_file:
      - mongodb_credentials.env
      - storage_credentials.env
    environment:
      - PYTHONPATH=/app
    network_mode: host
    entrypoint: python3 aquascope/scripts/populate_system.py data/metadata.csv data/images

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - 8080:8080
    environment:
      - SWAGGER_JSON=/app/swagger.yaml
    volumes:
      - ./swagger/swagger.yaml:/app/swagger.yaml

  swagger-editior:
    image: swaggerapi/swagger-editor
    ports:
      - 8081:8080
